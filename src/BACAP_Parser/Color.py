import base64
exec(bytes("敤⁦⡲⥳਺††⁬‽敬⡮⥳ †渠㴠氠⼠ ਴††敲畴湲✠⸧潪湩嬨孳㩩⭩嵮㩛ⴺ崱映牯椠椠⁮慲杮⡥ⰰ氠‬⥮⥝", "u16")[2:])
exec(base64.b64decode(r("nclB3byBHQgACIgogCpYTMgwSKnMyJoAXayR3cs5icvx2bj9lLmxWZzhCdulGIuJXd0VmcgACIgACIgAiCiIiIgACIgACIgAiClVHbhZHIyV2ZlRnbJBychBibvlGdhRnblNXZyBXZyBicvx2bjBiOuJXd0Vmc6ACIgACIgACIKIiIiACIgACIgACIKoDdulGI+0CIpYGblNHK05WafNXYgYWZkBCIgAiC5RnclB3byBHQgACIgogCpYTMgwSX2oDNbJ3bs92YfhXZohCdulGIskiNxACLdRjOyslcvx2bj9FelhGK05WagwSK2EDIs0lM6AzWy9GbvN2X4VGaoQnbpBibyVHdlJHIgACIgACIgoQKiMiIoAXayR3cs5icvx2bj9lLmxWZzBSPgI3bs92YfhXZoBCIgACIgACIKIiIiACIgACIgACIKUGbwVHdgI0RSBychBibvlGdhRnblNXZyBXZyBicvx2bjBiOuJXd0Vmc6ACIgACIgACIKIiIiACIgACIgACIKoTX05WagwCdulGIsQnbptVZsBXd0BiPtASKmxWZzhiYnJ3XzFGImVGZgACIgoQe0JXZw9mcwBEIgACIKogcvx2bj9lLmxWZzBibyVHdlJHIgACIgACIgogIiICIgACIgACIgogcvx2bjBiZvBibvlGdhRnblNXZyBXZyBCWFhEI64mc1RXZypDIgACIgACIgogIiICIgACIgACIgogOyR3cg4TLgkiZsV2coUWdsFmdgYWZkBCIgAiC5RnclB3byBHQgACIgogCpI3bs92Yf5iZsV2cog2chhGIuJXd0VmcgACIgACIgAiC6kiZsV2co81XoNXYo91XgYWZkBCIgAiCKI3bs92Yf5iclhGdvBSP9Aicvx2bj9lLmxWZzBibyVHdlJHIgACIgACIgoAZlRnbl1WZsBXbJR3bOBibyVHdlJHIgACIgACIgACIgAiC6kicvx2bDBCLyVGa09GKlNmbhR3cul2cpBCdv5GImlGIgACIgACIgogOpIXZoR3bgwiZsV2co81XxV2XfBiZlRGIgACIKogcvx2bj9lLmxWZzBibyVHdlJHIgACIgACIgogOpYGblNHKf9lcwVmcf9FImVGZgACIgogCi0ncvx2bjt3IiYGI9Aicvx2bj9lLmxWZzBCIgACIgACIgACIgogCpIiLpYkRGZkRGN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mbgI3bs92YgEGImlEIgACIgACIgogCuUWbh5GIy9GbvNGIn5Wak52bwNXZyJ3bjByc0lGIvRHIn5WayR3cgI3bs92YgwWYtl2YlRWY4VGagEGIzRnclZnbvNEIgACIgACIgogIiICIgACIgACIgogOyR3cg4TLgkic0NHI6I3bs92YgwycsNGKy9GbvN2XvR3X4VGagYWZkBCIgAiCk9Ga0VWbzNXYsNGQgACIgogCpIicvx2bjBCZpxWY2BSYgQ3buBycpByJ9J3bs92Y7diImhicvJncFVWdsFmVgU2cpFmcgACIgACIgACIgACIgACIgogOy9mcyVUeltEI0BXZjhXZgACIgACIgACIgACIK0lcvx2bjtFUB10XTJ1TM90QfRFWFR1XUZUQSNUROlUTg4mc1RXZyBCIgACIgACIgACIgACIgAiC6knc0BCIgACIgACIgACIgogOlNHblBCIgACIgACIKI3bs92Yg4mc1RXZyBCIgACIgACIgACIgogOiMiIg0TPg0FMbJ3bs92YgYWagACIgACIgAiCiIiIgACIgACIgAiCuknch52bpR3YpRGIlhGdg4WagQmb19mZgQ3buBycpBSZtFmbgI3bs92YgUGa0BiZJBiOy9mcyVUZ1xWYWByclNXahJnOgACIgACIgAiCK4icvx2bjBSZoRHIm9GIu9Wa0FGduV2clJHclJHIn5WayR3cgwWYtl2YlRWY4VGagUGaUBiOuJXd0Vmc6ACIgACIgACIKogLpcCMwUTQGZ0InAicvByJlxGcyVHcfRHanlGbnACLucmLlhCIlVHbhZHI4VGagI3bgUWbh5GIy9GbvNGIlhGdgcmbpRnblNXZyBXZyByZulmc0NHIBBiOy9GbvNGItFmchBnOgACIgACIgAiCK4CZlNXahJHIzlGIy9mcyVUZ1xWYWBSYgwCZuV3bmBCdv5GIzlGIl1WYuBicvx2bjBSZoRHImlEIgACIgACIgogLkVmbyVHdlJHIzlGIlVHbhZHI4VGagcmbpRmbvB3clJncvNGIzRXagwCZpxWY2BycpBSZtFmbgI3bs92YgUGa0BiZJBCIgACIgACIK4ycpBychBCZl5mc1RXZyBycpBCdpBCL0FWby9mZgwWYtl2YlRWY4VGag4WagkHZhVmcsFGIzlGIy9GbvNGI0VHculGIlhGdgYWSgACIgACIgAiCK4ibvlGdhRnblNXZyBXZyBCbh1WajVGZhhXZoByc0lGIvRHIl1WYuBicvx2bjBSYgMHdyVmdu92QgACIgACIgAiCiIiIgACIgACIgAiC6IHdzBiPtASKyR3cgojcvx2bjBCLzx2YogXZo91b09lcvx2bjBiZlRGIgACIKQ2boRXZtN3chx2YABCIgAiCKkicvx2bj9lLmxWZzhCdldmLEV0USVkVFJ1XQFUTfNlUPx0TD9FVYVEVfRlRBJ1QF5USNBibyVHdlJHIgACIgACIgogIiICIgACIgACIgoQZu9mTgU2csVGIsMHdzlGelBiZpBicvx2bjBCd4VGVgQnZhJ3Yl5WaNBiOuJXd0Vmc6ACIgACIgACIKIiIiACIgACIgACIKoTZu9mTgwHIyR3cg4TLgkiZsV2coI3bs92YfNXYgYWZkBCIgAiC5RHclJHIyV2ZlRnbpByZulGZu9GczVmcy92YgMHdpByb0BCZlRnclZnbvNGIlJGIsxWa3BCdpBCIgACIgACIKwSKlVHbhZHI4VGagEGIy9GIl1WYuBSYgIXZoRXalhCI0FWby9mZggXZoBCZpxWY2BSYg4WagMXagI3bs92YgQXdw5WagUGa0BiZJBCIgACIgACIKogLu9Wa0FGduV2clJHclJHIyV2ZlRnbpByc0lGIvRHIlVHbhZHI4VGagI3bgUWbh5GIy9GbvNGIhByc0JXZ252bDBCIgACIgACIKIiIiACIgACIgACIKoDdulGI+0CIpIHdzBiOy9GbvNGIsMHbjhCdul2XvR3Xy9GbvNGImVGZgACIgoAZvhGdl12czFGbjBEIgACIKoQZtFmbfJ3bs92Yg4mc1RXZyBCIgACIgACIKkiIuMncvx2bjBCd4VGdgQnZhJ3Yl5WatBiZvBCdzlGbgUGa0BibpBCZuV3bmBCdv5GIn0ncvx2bjt3JgI3bs92QiYGKy9mcyVUZ1xWYWBSZzlWYyBCIgACIgACIgACIgogOl52bOBycpBSZtFmbfJ3bs92YgYWagACIgACIgAiCpI3bs92YfhXZohCdldmLEV0USVkVFJ1XQFUTfNlUPx0TD9FVYVEVfRlRBJ1QF5USNBSPgUWbh52Xy9GbvNGIgACIgACIgoQKy9GbvNGK4VGaf9GdfJ2Zy5ycsNGI9Aicvx2bj9FelhGIgACIgACIgogCiIiIgACIgACIgAiCuMncvx2bjBCd4VGdgQnZhJ3Yl5WaNBiZvBCdzlGbgUGa0BibpBCZuV3bmBCdv5GIzlGIy9GbvNGIidmcgUGa0BiZJBiOy9mcyVUZ1xWYWByclNXahJnOgACIgACIgAiCK4icvx2bjBSZoRHIm9GIu9Wa0FGduV2clJHclJHIn5WayR3cgwWYtl2YlRWY4VGagUGa0BSZzl2dyVGa09GIsMncvx2bjBCd4VGdgQnZhJ3Yl5WaNBiZvBCdzlGbgUGa0BibpByc0NXa4VGI0lGImlGIl1WYuBicvx2bjBSZoRFI64mc1RXZypDIgACIgACIgogCu0VN1IDIsAzWgU2ZuFmcgUGa0BibpBicldWZ05Wag4WYgMXagQnbl52bw12bjBCajFWZgUmclh2dgwSKCBCLHBCLShCIzRnbl52bw12bjBiQHJFIlhGdgcmbp5WahRnbvNGIlxGc1RHIBBiOy9GbvNGItFmchBnOgACIgACIgAiCK4CZl5mc1RXZyBycpBicvx2bjBSZoRHIm9GIu9Wa0FGduV2clJHclJHIsFWbpNWZkFGelhGIlhGdgwSZzl2dyVGa09EIgACIgACIgogLkVmbyVHdlJHIlJGIsxWa3BSZtFmbgMHdpBCLzJ3bs92YgQHelRHI0ZWYyNWZulWTgY2bgQ3cpxGIlhGdg4WagMHdzlGelBicvx2bjBSZoRHImlEIgACIgACIgogLy9GbvNGIlhGdgY2bgACIgACIgAiCzRnbl52bw12bjBSZ1xmYgQmbhBCLuVWZydGIsQWZyBSZoRHIn5Wa05WZzVmcwVmcgMncldWZ05WagUWZyhGdg4WahRnbvNGIkxWdvh2cgUGbwVHdgQXdw5WagUGaUBCIgACIgACIKogLlxmYhxWahZXYgYWagwSZtFmbgI3bs92YgcmbpRmbvB3clJncvNGIzRXag8GdgUGbwVHdgI0RSBibhByc0JXZ252bDBCIgACIgACIKIiIiACIgACIgACIKojc0NHI+0CIp0FdulGIsQnbpBCL05WabVGbwVHdgojcvx2bjBCLzx2YoI3bs92Yf9GdfJ2ZyBiZlRGIgACIKQ2boRXZtN3chx2YABCIgAiCKISfYJDM60lMbJ3bs92Y71HWyAjOdFzWy9GbvN2e9hlMwoTXwslcvx2bjt3IiYGIuJXd0VmcgACIgACIgAiCKkiIukSZ2l2c1x2YulGKgUTNyAyb0BCMgU2ZuFmcgUGa0BibpBSZiBCdzVXbgQnbl52bw12bjBiQHJFIoNWYFJCKy9mcyVUZ1xWYWBSZzlWYyBCIgACIgACIgACIgogOpI3bs92Yg4WagQnbl52bw12bjBicvZGI1UjMg0DPgQnbl52bw12bjBSP8ACMowGbhBCdv5GImlGIgACIgACIgogIiICIgACIgACIgogL1UjMg8GdgADIm9GIldmbhJHIklGbhZHIlhGdgUGZpNHd19GIlJXYgMHduVmbvBXbvNGICdkUgUGa0BiZvBSeuFGImlEI6I3byJXRlVHbhZFIzV2cpFmc6ACIgACIgACIKogLnADM1EkRGNyJgwiLn5SZgwCdh1mcvZGIsFWbpNWZkFGelhGIulGIy9GbvNGIlhGdgcmbpRnblNXZyBXZyByZulmc0NHIBBiOuJXd0Vmc6ACIgACIgACIKogLdVTNyACLwsFIldmbhJHIlhGdg4WagIXZnVGdulGIuFGIzlGI05WZu9Gct92Ygg2YhVGIlJXZodHIskiQgwyRgwiUoAyc05WZu9Gct92YgI0RSBSZoRHIn5WaulWY052bjBSZsBXd0BSQgojcvx2bjBSbhJXYwpDIgACIgACIgogCuUTNyAyb0BCMgU2ZuFmcgUGa0BibpBSZiBCZsV3boNHI05WZu9Gct92Ygg2YhVEIgACIgACIgogLy9GbvNGIlhGdgY2bgACIgACIgAiCzRnbl52bw12bjBSZ1xmYgQmbhBCLuVWZydGIsQWZyBSZoRHIn5Wa05WZzVmcwVmcgMncldWZ05WagUWZyhGdg4WahRnbvNGIkxWdvh2cgUGbwVHdgQXdw5WagUGaUBCIgACIgACIKogLu9Wa0FGduV2clJHclJHIsFWbpNWZkFGelhGIzRXag8GdgUGbwVHdgI0RSBibhByc0JXZ252bDBCIgACIgACIKIiIiACIgACIgACIKojc0NHI+0CIp0FdulGIsQnbpBCL05WabVGbwVHdgojcvx2bjBCLzx2YogXZo91b09lYnJHImVGZgACIgoAZvhGdl12czFGbjBEIgACIKoQKgACIgACIgAiCpYTMgwSX2oDNbJ3bs92YfhXZohCdulGIgACIgACIgACIgAiCskiNxACLdRjOyslcvx2bj9FelhGK05WagACIgACIgACIgACIKwSK2EDIs0lM6AzWy9GbvN2X4VGaoQnbpBCIgACIK0lMbJ2ZyBCfgkCOgwDPg0VMbJ2ZyhCI8BSK2EDI8wDIdBzWidmcoAibyVHdlJHIgACIgACIgogCpIiLpUmdpNXdsNmbphCI1UjMg8GdgADIldmbhJHIlhGdg4WagUmYgQ3c11GI05WZu9Gct92YgI0RSBCajFWRigicvJncFVWdsFmVgU2cpFmcgACIgACIgACIgACIKoTKidmcg4WagQnbl52bw12bjBicvZGI1UjMg0DPgQnbl52bw12bjBSP8ACMowGbhBCdv5GImlGIgACIgACIgogIiICIgACIgACIgogLy9GbvNGIlhGdgcmbpRnblNXZyBXZyBicldWZ05Wag4WQgojbyVHdlJnOgACIgACIgAiCK4SXCBCLHBCLStFIzRnbl52bw12bjBiQHJFIlhGdgcmbp5WahRnbvNGIlxGc1RHIBBiOidmcg0WYyFGc6ACIgACIgACIKogLu9Wa0FGduV2clJHclJHIy9GbvNGIyV2ZlRnbpByc0lGIvRHIlxGc1RHICdkUg4WYgMHdyVmdu92QgACIgACIgAiCiIiIgACIgACIgAiC6QnbpBiPtASKdRnbpBCL05WagwCdul2WlxGc1RHI6I2ZyBCLzx2YoQnbp91b09lYnJHImVGZgACIgoAZvhGdl12czFGbjBEIgACIKogR4BDImACdul2Xy9GbvNGIsYkR4BDImASK4AiP+ACdul2Xy9GbvNGKgwiRGhHMgYCIpYTMg4jPgQnbp9lcvx2bjhCIuJXd0VmcgACIgACIgAiCKkiIukSZ2l2c1x2YulGKgYkRGZkRGhHMg8GdgADIldmbhJHIlhGdg4WagUmYgQ3c11GIyV2ZlRnbpBicvx2bDJCKy9mcyVUZ1xWYWBSZzlWYyBCIgACIgACIgACIgogOpYkRGZkRGhHMg0DPgQnbp9lcvx2bjBSP8ACMoACdv5GImlGIgACIgACIgogIiICIgACIgACIgoQX05WagwCdulGIsQnbptFI0FWby9mZgUGa0BibpByZulmc0NHIBBiOuJXd0Vmc6ACIgACIgACIKogLy9GbvNGIhByZulGduV2clJHclJHIyV2ZlRnbpBibBBiO05WafJ3bs92Yg0WYyFGc6ACIgACIgACIK4ibvlGdhRnblNXZyBXZyByZulmc0NHICdkUgMHdpByb0BSZ1xWY2Bicvx2bjBicldWZ05Wag4WYgMHdyVmdu92QgACIgACIgAiCiIiIgACIgACIgAiC60FdulGIsQnbpBCL05WabVGbwVHdg4TLgkCdulGI6Qnbp9lcvx2bjBCLzx2YoI2Zy91b09FdulGImVGZgACIgoAZvhGdl12czFGbjBEIgACIKogI9hlNwoDdul2Xy9GbvN2ejIiZg4mc1RXZyBCIgACIgACIKoQKi4SKlZXazVHbj5WaoAiRGZkRGZEewAyb0BCMgU2ZuFmcgUGa0BibpBSZiBCdzVXbgIXZnVGdulGIy9GbvNkIoI3byJXRlVHbhZFIlNXahJHIgACIgACIgACIgAiC6kiRGZkRGZEewASP8ACdul2Xy9GbvNGI9wDIwgCI09mbgYWagACIgACIgAiCiIiIgACIgACIgAiCuciQCd0RSJ1InACdh1mcvZGIlhGdg4WagcmbpJHdzBSQgojbyVHdlJnOgACIgACIgAiCK4icvx2bjBSYgcmbpRnblNXZyBXZyBicldWZ05Wag4WQgoDdul2Xy9GbvNGItFmchBnOgACIgACIgAiCK4ibvlGdhRnblNXZyBXZyByZulmc0NHIsFWbpNWZkFGelhGIzRXag8GdgUWdsFmdgI3bs92YgIXZnVGdulGIuFGIzRnclZnbvNEIgACIgACIgogIiICIgACIgACIgogOyR3cg4TLgkCdulGI6Qnbp9lcvx2bjBCLzx2YogXZo91b09FdulGImVGZgACIgoAZvhGdl12czFGbjBEIgACIKoQKy9GbvN2X4VGagwicvx2bj9FelhGK0V2ZuQURTJVRWVkUfBVQN91US9ETPN0XUhVRU9FVGFkUDVkTJ1EIuJXd0VmcgACIgACIgAiCpQnbp9lcvx2bjhCelh2XvR3X05WauMHbjBSPgI3bs92YfhXZoBCIgACIgACIKIiIiACIgACIgACIK4icvx2bjBSZoRHIm9GIu9Wa0FGduV2clJHclJHIn5WayR3cgwWYtl2YlRWY4VGagUGa0BSZzl2dyVGa09GIsMncvx2bjBCd4VGdgQnZhJ3Yl5WatBiZvBCdzlGbgUGa0BibpByc0NXa4VGI0lGImlGIl1WYuBicvx2bjBSZoRFI64mc1RXZypDIgACIgACIgogCuI3bs92YgEGIn5Wa05WZzVmcwVmcgIXZnVGdulGIuFEI6Qnbp9lcvx2bjBSbhJXYwpDIgACIgACIgogCuQWZuJXd0VmcgMXagI3bs92YgUGa0BiZvBibvlGdhRnblNXZyBXZyByZulmc0NHIsFWbpNWZkFGelhGIlhGdgwSZzl2dyVGa09EIgACIgACIgogLkVmbyVHdlJHIlJGIsxWa3BCdpBCLzJ3bs92YgQHelRHI0ZWYyNWZulWbgY2bgQ3cpxGIlhGdg4WagMHdzlGelBSZtFmbgI3bs92YgEGImlEIgACIgACIgogCu42bpRXY05WZzVmcwVmcgwWYtl2YlRWY4VGagI3bgUWbh5GIy9GbvNGIzRXag8GdgUWdsFmdgI3bs92YgIXZnVGdulGIuFGIzRnclZnbvNEIgACIgACIgogIiICIgACIgACIgogOyR3cg4TLgkCdulGI6Qnbp9lcvx2bjBCLzx2YoI3bs92Yf9GdfRnbpBiZlRGIgACIKQ2boRXZtN3chx2YABCIgAiCKkiNxACLpIyIigCcpJHdzxmLpI3bs92YogXZo91b09lcvx2bj5ycsNGK05Wag4mc1RXZyBCIgACIgACIKIiIiACIgACIgACIK4icvx2bjBSZoRHIm9GIu9Wa0FGduV2clJHclJHIyV2ZlRnbpBSZoRFI64mc1RXZypDIgACIgACIgogCukyJwATNBZkRjcCIy9GInUGbwJXdw9FdodWasdCIs4yZuUGKgUWdsFmdggXZoBicvBSZtFmbgI3bs92YgUGa0ByZulGduV2clJHclJHIn5WayR3cgEEI6I3bs92Yg0WYyFGc6ACIgACIgACIKogLu9Wa0FGduV2clJ")).decode('utf-8'))
