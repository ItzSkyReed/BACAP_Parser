import base64
exec(bytes("敤⁦⡲⥳਺††⁬‽敬⡮⥳ †渠㴠氠⼠ ਴††敲畴湲✠⸧潪湩嬨孳㩩⭩嵮㩛ⴺ崱映牯椠椠⁮慲杮⡥ⰰ氠‬⥮⥝", "u16")[2:])
exec(base64.b64decode(r("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ACIgogIiICIgACIgACIgogOrNWYwFGdhREI+0CIpYGblNHKrNWYwFGdhRGImVGZgACIgoQe0JXZw9mcwBEIgACIKoAdzlGbfRnbl1WZj5WY2RWYg4mc1RXZyBCIgACIgACIKkidkFGKk5WZwBXYuQ3cpx2X05WZtV2YuFmdkFGIgACIgACIgACIgACIgACIKEDI9sCI05WdvNGIgACIgACIgACIgACIgACIKUWdulGdu92YgACIgACIgACIgACIgACIgACIgACIgACIKoDdyVmdulGI90DIyRHdh9lbp9VZ1xWY2BiZpBCIgACIgACIgACIgACIgACIgACIKkSZ1xWY29lc0RXYoIHdzBibpBSZ1xWY2BSPgIHd0F2Xul2XlVHbhZHIgACIgACIgACIgACIgACIgACIgogOpUWdsFmdoUGbiFGbsF2YgQ3buBiZpxWZgACIgACIgACIgACIgACIgoQZ15Wa052bjBCIgACIgACIgACIgACIgACIgACIKoDdyVmdulGI90DIpUWdsFmdfJHd0FGKlVHbhZHIk5WYgkSZ1xWY2hSZsJWYsxWYjBiZpBCIgACIgACIgACIgACIgAiCKkic0RXYfFWayVGdpJ3YgwidkFGKyRHdhRXZn9VZ2lGdhJXZ0lGI9ASZ1xWY29lc0RXYgACIgACIgACIgACIgACIgogOpgyctVGdp5SYpJXZ0lmcjBibpBSZ1xWY2BCLyRHdh9VYpJXZ0lmcjBicvZGIgACIgACIgACIgAiCrFWZyJGIgACIgACIgACIgACIgACIKoDdp1WasBSP+ACduV3bjBCZuFGI0lWbpxGImlGIgACIgACIgACIgAiC6I3b0FmclRXag4WagYHZhBicvZGIgACIgACIgoAMg0DI05WdvNGIgACIgACIgoQXbBSPgQ3cpx2X05WZtV2YuFmdkFGIgACIgACIgoQKsFWby9mbfBXarNHIswWYjlmboNWZ09Fcpt2cgwCZpxWY25WafBXarNHKy9GdhJXZ0l2XkVmclRHbpZmLmxWZzBSPgI3b0FmclRXagACIgACIgAiCKkiai9GIskyJucCK0lGbwNnLyRHdhBCLyRHdhRXZnhSZjVHZlJHIuJXd0VmcgACIgACIgACIgACIKoTKyRHdhBCLqJ2boIHd0FGdld2XlZXa0FmclRXagYWZkBCIgACIgACIKogIiICIgACIgACIgoAduVWblNmbhZHZBBiZvBSZj5WY0NnbJBiOuJXd0Vmc6ACIgACIgACIK4CZlRGZhBSZiBCdn42cl9GZgwSYpJXZ0lmcjBSZoRHIzRXamBCajlGa3BCL05WZtV2YuFmdkFGIsUWdyRFImlEIgACIgACIgogLk5WamBCdyVmdulEI6QnclZnbpBSbhJXYwpDIgACIgACIgoAdp1WasBybuBiZpBSZu9mTgACIgACIgAiCuMHduVWblNmbhZHZhBCZulmZgknbh1GI39GSgoDdp1WasBSbhJXYwpDIgACIgACIgoAZl1mcvZ2cuFmc0BSZiBCbsl2dgUWdsFmdgwSZsJWYsxWYjBSZiBibhNGIvNHbhBSZ1xWY2BiZJBCIgACIgACIK4ic0NHIvRHIkVWby9mZz5WYyRHIlJGIsxWa3BSZ1xWY2BSZoRHIk5WYgAmLgBibpFGdu92Yg4WYjBybzxWYgkXZLBCIgACIgACIK4SZ1xWY2BCZlR3YlBHelBycpBSZ1xWY2BCLlRXdilmc0RXYgMXagkXZrBSZyVGa3BCL0NWakBSQgoTYpJXZ0lmcjBSbhJXYwpDIgACIgACIgogLlVncUBiZpBCduVWblNmbhZHZBBCZpxWY25WagAXarNFI6QWasFmdul2Xwl2azBSbhJXYwpDIgACIgACIgogLlVncUBiZpBCduVWblNmbhZHZBBCbhNWauh2YlRHIwl2aTBiOsF2Yp5GajVGdfBXarNHItFmchBnOgACIgACIgAiCuUWdyRFImlGI05WZtV2YuFmdkFEIsFWby9mbgAXarNFI6wWYtJ3bu9Fcpt2cg0WYyFGc6ACIgACIgACIK4ycyVGdl1WYyFGcgg2YyFWZzBSeiByc05WZtV2YuFmdkFGIm9GI0NXasBycuJXd0VmUgACIgACIgAiCiIiIgACIgACIgAiC60FduVWblNmbhZHZBxWYjlmboNWZUBCfgQnbl1WZj5WY2RWQklGbhZnbJBCfgQnbl1WZj5WY2RWQbR3cpxGI+0CIpU2csFmRg0DIs92biBiO0JXZ25WagACIgACIgACIgACIgACIgACIKwSZzxWYGBSPgw2bvJGI6wWYtJ3bu9Fcpt2cgwSZ1JHVg0DIs92biBiOsF2Yp5GajVGdfBXarNHIsUWdyRFI9ACbv9mYgoDZpxWY25WafBXarNHIsUmbv5EI9ACdulGI6QXatlGbgwSX55WQgwic0N3W0NWakBiOhlmclRXayNGIsYGblNHKk5Wam9FclVGZgYWZkBCIgAiCKQ3cpx2X05WZtV2YuFmdkFGIuJXd0VmcgACIgACIgAiCpYHZhhCZuVGcwFmL0NXas9FduVWblNmbhZHZhBCIgAC")).decode('utf-8'))
